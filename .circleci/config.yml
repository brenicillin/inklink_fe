# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  node: circleci/node@4.7
  heroku: circleci/heroku@1.2.6

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
     - image: circleci/ruby:3.1.1
       environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: postgres
        RAILS_ENV: test
     - image: circleci/postgres:11
       environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: inklink_fe_test
    steps:
      - checkout
      - node/install:
        install-yarn: true
        node-version: '16.13'
      - run:
        name: Force undler Version
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
      - run:
        name: Bundle Install
        command: bundle install
      - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - store_test_results:
        path: test_results

  deploy: 
    executor: heroku/default
    steps:
      - attach_workspace:
        at: -/project
      - heroku/deploy-via-git:
        force:true
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - heroku/deploy-via-git: # Use the pre-configured job, deploy-via-git
          requires:
            - build-and-test
          post-steps:
            - run:
                name: migrate
                command: heroku run -a $HEROKU_APP_NAME rails db:migrate
          filters:
            branches:
              only:
                - main